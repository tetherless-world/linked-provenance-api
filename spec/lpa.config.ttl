
#
# A Linked Provenance API config. 
#

# Assorted prefix declarations. Some of them are for the structuring
# of the API config, others are for the vocabulary definitions.
#

@prefix api:                <http://purl.org/linked-data/api/vocab#> .
@prefix dct:				<http://purl.org/dc/terms/> .

@prefix rdf:                <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:               <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:				<http://www.w3.org/2002/07/owl#> .
@prefix xsd:                <http://www.w3.org/2001/XMLSchema#> .

# The elda namespace/prefix is for Elda extensions to the LDA specification.
@prefix elda:               <http://www.epimorphics.com/vocabularies/lda#> .

# Prefix for PROV-O
@prefix prov:				<http://www.w3.org/ns/prov#> .

@ Prefix for Linked Provenance API
@prefix lpa:				<http://www.tw.rpi.edu/vocabularies/lpa#> .

# ---------------------------------------------------------------------
# API config

lpa:linked-provenance-api a api:API ; 
	rdfs:label "Linked Provenance API"@en ; 
	api:sparqlEndpoint <local:data/provenance.ttl> ; 
	api:defaultFormatter api:labelledDescribeViewer ; 
	api:formatter
		[
			a elda:FeedFormatter ; 
			api:name "atom" ;
			elda:className "com.epimorphics.lda.renderers.FeedRendererFactory" ; 
			api:mimeType "application/atom+xml"
		] ;
	api:variable
		[ api:name "base" ; api:value "http://localhost:8080/lpa" ] ,
		[ api:name "_strip_has" ; api:value "yes" ] ,
		[ api:name "_suppress_ipto" ; api:value "yes" ] ;
	api:endpoint 
		lpa:entitiesEndpoint , 
		lpa:activitiesEndpoint , 
		lpa:agentsEndpoint ,
		lpa:collectionsEndpoint ,
		lpa:bundlesEndpoint ,
		lpa:entityEndpoint ,
		lpa:activityEndpoint ,
		lpa:agentEndpoint ,
		lpa:personEndpoint ,
		lpa:organizationEndpoint ,
		lpa:softwareAgentEndpoint ,
		lpa:planEndpoint ,
		lpa:roleEndpoint ,
		lpa:collectionEndpoint ,
		lpa:bundleEndpoint
	.

###############################################################################
#	
# Endpoint definitions	
#
###############################################################################

lpa:entitiesEndpoint
	a api:ListEndpoint ; 
	rdfs:label "PROV Entities" ; 
	api:uriTemplate "/entities" ; 
	api:selector [ api:filter "type=Entity"; api:sort "label" ]
	.

lpa:activitiesEndpoint
	a api:ListEndpoint ; 
	rdfs:label "PROV Activities" ; 
	api:uriTemplate "/activities" ; 
	api:selector [ api:filter "type=Activity"; api:sort "label" ]
	.

lpa:agentsEndpoint
	a api:ListEndpoint ; 
	rdfs:label "PROV Agents" ; 
	api:uriTemplate "/agents" ; 
	api:selector [ api:filter "type=Agent"; api:sort "label" ]
	.

lpa:collectionsEndpoint
	a api:ListEndpoint ; 
	rdfs:label "PROV Collections" ; 
	api:uriTemplate "/collections" ; 
	api:selector [ api:filter "type=Collection"; api:sort "label" ]
	.

lpa:bundlesEndpoint
	a api:ListEndpoint ; 
	rdfs:label "PROV Bundles" ; 
	api:uriTemplate "/bundles" ; 
	api:selector [ api:filter "type=Bundle"; api:sort "label" ]
	.

lpa:entityEndpoint
	a api:ItemEndpoint ; 
	rdfs:comment "PROV Entity"@en ;
	api:uriTemplate "/entity/{id}" ;
	api:itemTemplate "{base}/entity/{id}"
	.

lpa:entityRevisionsEndpoint
	a api:ListEndpoint ;
	rdfs:comment "Entity revisions of this entity"@en ;
	api:uriTemplate "/entity/{id}/revision" ;
	api:variable [
		api:name "entity" ;
		api:value "{base}/entity/{id}" ;
		api:type rdfs:Resource ;
	] ;
	api:selector [
		api:where "?item prov:wasRevisionOf ?entity" ;
	] ;
	.

lpa:activityEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Activity"@en ;
	api:uriTemplate "/activity/{id}" ;
	api:itemTemplate "{base}/activity/{id}"
	.

lpa:activityGeneratedEntitiesEndpoint
	a api:ListEndpoint ;
	rdfs:comment "Entities Generated by this activity"@en ;
	api:uriTemplate "/activity/{id}/generated" ;
	api:variable [
		api:name "activity" ;
		api:value "{base}/activity/{id}" ;
		api:type rdfs:Resource ;
	] ;
	api:selector [
		api:where "?item prov:wasGeneratedBy ?activity" ;
	] ;
	.

lpa:activityInformedActivitiesEndpoint
	a api:ListEndpoint ;
	rdfs:comment "Activities informed by this activity"@en ;
	api:uriTemplate "/activity/{id}/informed" ;
	api:variable [
		api:name "activity" ;
		api:value "{base}/activity/{id}" ;
		api:type rdfs:Resource ;
	] ;
	api:selector [
		api:where "?item prov:wasInformedBy ?activity" ;
	] ;
	.

lpa:activityInvalidatedEntitiesEndpoint
	a api:ListEndpoint ;
	rdfs:comment "Entities invalidated by this activity"@en ;
	api:uriTemplate "/activity/{id}/invalidated" ;
	api:variable [
		api:name "activity" ;
		api:value "{base}/activity/{id}" ;
		api:type rdfs:Resource ;
	] ;
	api:selector [
		api:where "?item prov:wasInvalidatedBy ?activity" ;
	] ;
	.

lpa:agentEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Agent"@en ;
	api:uriTemplate "/agent/{id}" ;
	api:itemTemplate "{base}/agent/{id}"
	.

lpa:personEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Person"@en ;
	api:uriTemplate "/person/{id}" ;
	api:itemTemplate "{base}/person/{id}"
	.

lpa:organizationEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Organization"@en ;
	api:uriTemplate "/organization/{id}" ;
	api:itemTemplate "{base}/organization/{id}"
	.

lpa:softwareAgentEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Software Agent"@en ;
	api:uriTemplate "/softwareAgent/{id}" ;
	api:itemTemplate "{base}/softwareAgent/{id}"
	.

lpa:planEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Plan"@en ;
	api:uriTemplate "/plan/{id}" ;
	api:itemTemplate "{base}/plan/{id}"
	.

lpa:roleEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Role"@en ;
	api:uriTemplate "/role/{id}" ;
	api:itemTemplate "{base}/role/{id}"
	.

lpa:collectionEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Comment"@en ;
	api:uriTemplate "/collection/{id}" ;
	api:itemTemplate "{base}/collection/{id}"
	.

lpa:bundleEndpoint
	a api:ItemEndpoint ;
	rdfs:comment "PROV Bundle"@en ;
	api:uriTemplate "/bundle/{id}" ;
	api:itemTemplate "{base}/bundle/{id}:
	.

#lpa:bundleContentsEndpoint
#	a api:ListEndpoint ;
#	rdfs:comment "PROV Bundle Contents"@en ;
#	api:uriTemplate "/bundle/{id}/contents" ;
#	api:variable [
#		api:name "bundle" ;
#		api:value "{base}/bundle/{id}" ;
#		api:type rdfs:Resource ;
#	] ;
#	api:selector [
#		api:where "" ;
#	] ;
#	.

###############################################################################
#
# PROV-O Vocabulary
#
###############################################################################

prov:Entity a owl:Class ; 
	api:label "Entity" .

prov:Activity a owl:Class ; 
	api:label "Activity" .

prov:Agent a owl:Class ; 
	api:label "Agent" .

prov:Person a owl:Class ;
	api:label "Person" .

prov:Organization a owl:Class ;
	api:label "Organization" .

prov:SoftwareAgent a owl:Class ;
	api:label "Software Agent" .

prov:Collection a owl:Class ;
	api:label "Collection" .

prov:EmptyCollection a owl:Class ;
	api:label "Empty Collection" .

prov:Bundle a owl:Class ;
	api:label "Bundle" .

prov:Location a owl:Class ;
	api:label "Location" .

prov:Plan a owl:Class ;
	api:label "Plan" .

prov:Role a owl:Class ;
	api:label "Role" .

prov:Derivation a owl:Class ;
	api:label "Derivation" .

prov:Usage a owl:Class ;
	api:label "Usage" .

prov:Generation a owl:Class 
	api:label "Generation" .

prov:Start a owl:Class ;
	api:label "Start" .

prov:End a owl:Class ;
	api:label "End" .

prov:Influence a owl:Class ;
	api:label "Influence" .

prov:EntityInfluence a owl:Class ;
	api:label "Entity Influence" .

prov:ActivityInfluence a owl:Class ;
	api:label "Activity Influence" .

prov:Quotation a owl:Class ;
	api:label "Quotation" .

prov:Association a owl:Class ;
	api:label "Association" .

prov:Revision a owl:Class ;
	api:label "Revision" .

prov:PrimarySource a owl:Class ;
	api:label "Primary Source" .

prov:Communication a owl:Class ;
	api:label "Communication" .

prov:Invalidation a owl:Class ;
	api:label "Invalidation" .

prov:AgentInfluence a owl:Class ;
	api:label "Agent Influence" .

prov:Attribution a owl:Class ;
	api:label "Attribution" .

prov:wasGeneratedBy a owl:ObjectProperty ;
	api:label "wasGeneratedBy" .

prov:wasDerivedFrom a owl:ObjectProperty ;
	api:label "wasDerivedFrom" .

prov:wasAttributedTo a owl:ObjectProperty ;
	api:label "wasAttributedTo" .

prov:startedAtTime a owl:DatatypeProperty ;
	rdfs:range xsd:dateTime ;
	api:label "startedAtTime" .

prov:endedAtTime a owl:DatatypeProperty ;
	rdfs:range xsd:dateTime ;
	api:label "endedAtTime" .

prov:used a owl:ObjectProperty ;
	api:label "used" .

prov:wasInformedBy a owl:ObjectProperty ;
	api:label "wasInformedBy" .

prov:wasAssociatedWith a owl:ObjectProperty ;
	api:label "wasAssociatedWith" .

prov:actedOnBehalfOf a owl:ObjectProperty ;
	api:label "actedOnBehalfOf" .